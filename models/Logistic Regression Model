# Imports
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix
import matplotlib.pyplot as plt

# Load Dataset
snapshot_df = pd.read_csv('../data/world_cup_snapshots.csv')

# Feature Engineering
snapshot_df['score_diff'] = (
	snapshot_df['home_score']
	- snapshot_df['away_score']
)
snapshot_df['xg_diff'] = snapshot_df['home_xg'] - snapshot_df['away_xg']

features = ['minute', 'score_diff', 'home_red', 'away_red', 'xg_diff']
target = 'final_result'

X = snapshot_df[features]
y = snapshot_df[
	target
]

# üõ†Ô∏è Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(
	X, y, test_size=0.2, random_state=42
)

# Train Model
model = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=1000)
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluation
print(classification_report(y_test, y_pred))
